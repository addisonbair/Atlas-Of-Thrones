apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:5-alpine
        ports:
          - containerPort: 6379
            name: redis
        volumeMounts:
        - mountPath: /data
          name: redis-vol
  volumeClaimTemplates:
  - metadata:
      name: redis-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50M
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: postgres
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: aothrones.azurecr.io/postgis
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-vol
        env:
          - name: POSTGRES_USER
            value: patrick
          - name: POSTGRES_DB
            value: atlas_of_thrones
  volumeClaimTemplates:
  - metadata:
      name: postgres-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100M
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
  - port: 8080
    name: frontend
  selector:
    app: atlas
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
  - port: 5000
    name: api
  selector:
    app: atlas
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlas
  labels:
    app: atlas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: atlas
  template:
    metadata:
      labels:
        app: atlas
    spec:
      initContainers:
      - name: wait-for-redis
        image: redis:5-alpine
        command: ['sh', '-c',
          'until redis-cli -h redis ping;
          do echo waiting for redis; sleep 1; done;']
      - name: wait-for-postgres
        image: postgres:12-alpine
        command: ['sh', '-c', 
          'until pg_isready -h postgres -U patrick -d atlas_of_thrones -p 5432; 
          do echo waiting for postgres; sleep 1; done;']
      containers:
      - name: atlas
        image: aothrones.azurecr.io/atlas
        ports:
        - containerPort: 8080
          name: frontend
        - containerPort: 5000
          name: api
        env:
        - name: DATABASE_URL
          value: "postgres://patrick:@postgres:5432/atlas_of_thrones"
        - name: REDIS_HOST
          value: redis
        livenessProbe:
          httpGet:
            path: /kingdoms/1/summary
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
